package com.aaa.automaticanalyzer.processingengine;

import com.aaa.automaticanalyzer.model.Disease;
import com.aaa.automaticanalyzer.model.Medication;
import com.aaa.automaticanalyzer.model.Medicine;
import com.aaa.automaticanalyzer.model.User;
import com.aaa.automaticanalyzer.model.analysis.BaseAnalysis;
import com.aaa.automaticanalyzer.model.analysis.HypothyroidismAnalysis;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.List;

public class HypothyroidismEngine implements ProcessingEngine {
    public static String EUTIROX = "Eutirox";
    public static int[] doses = {25, 50, 75, 88, 100, 112, 125, 137, 150, 175, 200};

    /*  Doses for eutirox are the following: 25, 50, 75, 88, 100, 112, 125, 137, 150, 175, 200
        The changes in medication are generated by using the last dose taken, so if you were taking 25mg
        and the blood test shows a TSH over 4.78 you will start taking 50mg and so on.

        Medication for hypothyroidism only includes eutirox, so patien's medication will be an arraylist with one item
     */

    @Override
    public List<Medicine> generateMedication(BaseAnalysis analysis) {
        Medicine medicine = new Medicine();
        medicine.setDose(25d);
        medicine.setName("Eutirox");
        return Arrays.asList(medicine);
    }

    @Override
    public void increaseMedication(List<Medication> medication) {
        for (Medication m : medication) {
            if (m.getDisease().equals(Disease.HYPOTHYROIDISM)) {
                //Only one medicine, eutirox
                Medicine medicine = m.getMedicines().get(0);
                medicine.setDose(getNextDose(medicine.getDose().intValue()));
            }
        }
    }

    @Override
    public void decreaseMedication(List<Medication> medication) {
        for (Medication m : medication) {
            if (m.getDisease().equals(Disease.HYPOTHYROIDISM)) {
                //Only one medicine, eutirox
                Medicine medicine = m.getMedicines().get(0);
                medicine.setDose(getPreviousDose(medicine.getDose().intValue()));
            }
        }
    }

    @Override
    public void modifyMedication(User user, BaseAnalysis analysis) {
        HypothyroidismAnalysis htAnalysis = (HypothyroidismAnalysis) analysis;
        if (Double.parseDouble(htAnalysis.getTSH()) > Double.parseDouble(htAnalysis.getMaxTSH())) {
            if (user.isMedicated(Disease.HYPOTHYROIDISM))
                increaseMedication(user.getMedications());
        } else if (Double.parseDouble(htAnalysis.getTSH()) < Double.parseDouble(htAnalysis.getMinTSH())) {
            if (user.isMedicated(Disease.HYPOTHYROIDISM))
                decreaseMedication(user.getMedications());
        }
    }


    @Override
    public double getNextDose(int currentDose) {
        switch (currentDose) {
            case 25:
                return 50d;
            case 50:
                return 75d;
            case 75:
                return 88d;
            case 88:
                return 100d;
            case 100:
                return 112d;
            case 112:
                return 125d;
            case 125:
                return 137d;
            case 137:
                return 150d;
            case 150:
                return 175d;
            case 175:
                return 200d;
        }

        return 0;
    }

    @Override
    public double getPreviousDose(int currentDose) {
        switch (currentDose) {
            case 50:
                return 25d;
            case 75:
                return 50d;
            case 88:
                return 75d;
            case 100:
                return 88d;
            case 112:
                return 100d;
            case 125:
                return 112d;
            case 137:
                return 125d;
            case 150:
                return 137d;
            case 175:
                return 150d;
            case 200:
                return 175d;
        }

        return 0;
    }
}
